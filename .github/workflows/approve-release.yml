name: Approve release

on:
  release:
    types: [released]

env:
  VERSION: ${{ github.ref_name }}

jobs:
  approve_release:
    name: Approve release
    runs-on: ubuntu-latest

    permissions:
      contents: read
      deployments: write

    steps:
      - name: Check out `${{ env.VERSION }}` tag
        uses: actions/checkout@v4

      - name: Create GitHub deployment
        uses: bobheadxi/deployments@v1
        id: create_deployment
        with:
          step: start
          env: Production â€“ web-prod
          desc: Promoting release candidate to production

      - name: Compose release candidate domain name
        id: release_candidate_domain_name
        uses: ./.github/actions/release-candidate-domain-name
        with:
          version: ${{ env.VERSION }}

      - name: Promote release candidate to production
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROD_PROJECT_ID }}
        run: |
          vercel promote ${{ steps.release_candidate_domain_name.outputs.value }} \
            --yes \
            --token ${{ secrets.VERCEL_RELEASER_TOKEN }} \
            --scope ${{ secrets.VERCEL_TEAM_ID }}

      - name: Finalize GitHub deployment
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          env: ${{ steps.create_deployment.outputs.env }}
          deployment_id: ${{ steps.create_deployment.outputs.deployment_id }}
          status: ${{ job.status }}
          auto_inactive: true
          env_url: https://zwirner.dev

      - name: Deactivate release candidate GitHub deployment
        uses: bobheadxi/deployments@v1
        if: success()
        with:
          step: deactivate-env
          env: Preview - web-prod
          desc: Promoted release candidate to production
