name: Initiate release
on:
  push:
    tags:
      - '2[3-9].[01][0-9].[0-3][0-9].[0-2][0-9]' # A calendar version in the "YY.0M.0D.0H" format.

env:
  VERSION: ${{ github.ref_name }}

jobs:
  create_release_candidate:
    name: Create release candidate
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Check out `${{ env.VERSION }}` tag
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-tags: true

      - name: Check tag is on `main`
        run: |
          if [[ $(git branch --contains ${{ env.VERSION }} 2>/dev/null) != *main* ]]; then
            echo '::error title=Wrong branch::Release tags must be created on the main branch.'
            exit 1
          fi

      - name: Create GitHub pre-release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          generate_release_notes: true

  deploy_release_candidate:
    name: Deploy release candidate
    runs-on: ubuntu-latest
    needs: create_release_candidate

    permissions:
      contents: read
      deployments: write

    steps:
      - name: Check out `${{ env.VERSION }}` tag
        uses: actions/checkout@v4

      - name: Create GitHub Deployment
        uses: bobheadxi/deployments@v1
        id: create_deployment
        with:
          step: start
          env: Preview - web-prod
          desc: Deploying as preview in `web-prod`

      - name: Compose release candidate domain name
        id: release_candidate_domain_name
        uses: ./.github/actions/release-candidate-domain-name
        with:
          version: ${{ env.VERSION }}

      - name: Deploy `web-prod` preview
        id: deploy_preview
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_RELEASER_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_TEAM_ID }}
          scope: ${{ secrets.VERCEL_TEAM_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROD_PROJECT_ID }}
          alias-domains: ${{ steps.release_candidate_domain_name.outputs.value }}

      - name: Finalize GitHub deployment
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          env: ${{ steps.create_deployment.outputs.env }}
          deployment_id: ${{ steps.create_deployment.outputs.deployment_id }}
          status: ${{ job.status }}
          auto_inactive: true
          env_url: ${{ steps.deploy_preview.outputs.preview_url }}
